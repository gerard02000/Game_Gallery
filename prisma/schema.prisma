// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


//prisma/schema.prisma
// datasource db {
//   provider  = "postgresql"
//   url  	    = env("DATABASE_URL")
//   directUrl = env("DIRECT_URL")
 //}

generator client {
  provider = "prisma-client-js"
}

datasource db {
 provider  = "mysql"
 url  	    = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id @default(cuid())
  name        String
  email         String    @unique
  image        String?
  emailVerified  Boolean ? @default(false)
  accounts      Account[] // Agregamos esta línea para representar la relación inversa
  victorias  Int?
  derrotas   Int?
  empates    Int?
  password    String?
  role          String?   @default("USER")  // o  ADMIN 
   partidas      Partida[]
}

model Partida {
  id          String    @id @default(cuid())
  victorias  Int?
  derrotas   Int?
  empates    Int?
  userId    String
  user      User @relation(fields: [userId], references: [id], onDelete: Cascade)
    juegoId    String
  juego      Juego @relation(fields: [juegoId], references: [id], onDelete: Cascade)
}

model Juego {
  id          String    @id @default(cuid())
  name        String
   partidas      Partida[]

}